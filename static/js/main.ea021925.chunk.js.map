{"version":3,"sources":["component/taskinfo.js","component/taskmanger.js","App.js","index.js"],"names":["TaskInfo","props","className","taskInfo","taskName","taskDescription","startDate","deadline","responsible","checklistOfSubtasks","map","cl","index","key","TaskManager","useState","tasks","setTasks","setTaskInfo","isClicked","setIsClicked","isLoanded","setIsLoanded","showTable","setShowtable","findId","e","val","target","parentNode","firstElementChild","innerHTML","result","find","id","onClick","fetch","then","res","json","data","scope","lists","App","ReactDOM","render","document","getElementById"],"mappings":"4PAEe,SAASA,EAASC,GAC7B,OACI,yBAAKC,UAAU,QACX,wBAAIA,UAAU,eAAd,aACA,6BACI,yBAAKA,UAAU,mBAAf,cAA6CD,EAAME,SAASC,SAA5D,KACA,yBAAKF,UAAU,mBAAf,qBAAoDD,EAAME,SAASE,gBAAnE,KACA,yBAAKH,UAAU,mBAAf,cAA6CD,EAAME,SAASG,UAA5D,KACA,yBAAKJ,UAAU,mBAAf,aAA4CD,EAAME,SAASI,UAC3D,yBAAKL,UAAU,mBAAf,gBAA+CD,EAAME,SAASK,aAC9D,yBAAKN,UAAU,mBAAf,yBACA,yBAAKA,UAAU,cAAf,IAA+BD,EAAME,SAASM,oBAAqBC,KAAI,SAACC,EAAGC,GAAJ,OACnE,yBAAMV,UAAU,kBAAkBW,IAAKD,GAAQD,UCTpD,SAASG,EAAYb,GAAQ,IAAD,EACbc,mBAAS,IADI,mBAChCC,EADgC,KACzBC,EADyB,OAEPF,mBAAS,IAFF,mBAEhCZ,EAFgC,KAEtBe,EAFsB,OAGLH,oBAAS,GAHJ,mBAGhCI,EAHgC,KAGrBC,EAHqB,OAILL,oBAAS,GAJJ,mBAIhCM,EAJgC,KAIrBC,EAJqB,OAKLP,oBAAS,GALJ,mBAKhCQ,EALgC,KAKrBC,EALqB,KAuBvC,SAASC,EAAOC,GACZ,IAAIC,EAAMD,EAAEE,OAAOC,WAAWC,kBAAkBC,UAC1CC,EAAShB,EAAMiB,MAAK,SAAA9B,GAAQ,OAAIA,EAAS+B,KAAOP,KACtDT,EAAYc,GACZZ,GAAa,GAOjB,OACI,yBAAKlB,UAAU,kBACX,wBAAIA,UAAU,gBAAd,gBACA,4BAAQA,UAAU,kBAAkBiC,QA9B5C,WACIb,GAAa,GACbF,GAAa,GACbI,GAAa,GACbP,EAAS,IACTmB,MAAM,kEACDC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAACG,GACHvB,EAASuB,GACTlB,GAAa,GACbE,GAAa,QAoBjB,kBACCL,GAAa,4BAAQjB,UAAU,uBAAuBiC,QAR/D,WACIf,GAAa,GACbF,EAAY,MAMM,kBACbG,GAAa,uBAAGnB,UAAU,qCAAb,eACbqB,GAAa,6BACV,2BAAOrB,UAAU,2CACb,2BAAOA,UAAU,eACb,4BACI,wBAAIuC,MAAM,OAAV,OACA,wBAAIA,MAAM,OAAV,cACA,wBAAIA,MAAM,OAAV,cACA,wBAAIA,MAAM,OAAV,YACA,wBAAIA,MAAM,OAAV,iBAGR,+BACKzB,EAAMN,KAAI,SAACgC,EAAO9B,GAAR,OACP,wBAAIC,IAAKD,EAAOuB,QAASV,GACrB,wBAAIgB,MAAM,OAAOC,EAAMR,IACvB,4BAAKQ,EAAMtC,UACX,4BAAKsC,EAAMpC,WACX,4BAAKoC,EAAMnC,UACX,4BAAKmC,EAAMlC,oBAM9BW,GAAa,kBAACnB,EAAD,CAAUG,SAAUA,KCzD/BwC,MARf,WACE,OACE,6BACE,kBAAC7B,EAAD,QCCN8B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.ea021925.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function TaskInfo(props) {\n    return (\n        <div className=\"mt-3\">\n            <h1 className=\"text-center\">Task Info</h1>\n            <div>\n                <div className=\"list-group-item\">Task Name: {props.taskInfo.taskName} </div>\n                <div className=\"list-group-item\">Task Description: {props.taskInfo.taskDescription} </div>\n                <div className=\"list-group-item\">Start Date:{props.taskInfo.startDate} </div>\n                <div className=\"list-group-item\">Deadline: {props.taskInfo.deadline}</div>\n                <div className=\"list-group-item\">Responsible: {props.taskInfo.responsible}</div>\n                <div className=\"list-group-item\">Checklist of Subtasks:\n                <div className=\"list-group\"> {(props.taskInfo.checklistOfSubtasks).map((cl,index)=>\n                    <div  className=\"list-group-item\" key={index}>{cl}</div>\n                    )}              \n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}","import React, { useState } from 'react';\nimport TaskInfo from './taskinfo';\n\n\n\nexport default function TaskManager(props) {\n    const [tasks, setTasks] = useState([]);\n    const [taskInfo, setTaskInfo] = useState([]);\n    const [isClicked, setIsClicked] = useState(false);\n    const [isLoanded, setIsLoanded] = useState(false);\n    const [showTable, setShowtable] = useState(false);\n\n    function fetchData() {\n        setIsLoanded(true);\n        setIsClicked(false)\n        setShowtable(false);\n        setTasks([])\n        fetch('https://my-json-server.typicode.com/seewargame/mydbfiles/tasks')\n            .then(res => res.json())\n            .then((data) => {\n                setTasks(data)\n                setIsLoanded(false)\n                setShowtable(true)\n\n            })\n    }\n\n\n    function findId(e) {\n        let val = e.target.parentNode.firstElementChild.innerHTML;\n        const result = tasks.find(taskInfo => taskInfo.id === val)\n        setTaskInfo(result)\n        setIsClicked(true)\n    }\n\n    function closeTaskInfo() {\n        setIsClicked(false)\n        setTaskInfo([])\n    }\n    return (\n        <div className=\"container mt-3\" >\n            <h1 className=\"text-center \">Task Manager</h1>\n            <button className=\"btn btn-success\" onClick={fetchData}>Show All Tasks</button>\n            {isClicked && <button className=\"btn btn-warning ml-2\" onClick={closeTaskInfo}>CLose TaskInfo</button>}\n            {isLoanded && <p className=\"font-weight-bold mt-3 text-danger\">...Loanding</p>}\n            {showTable && <div>\n                <table className=\"table table-borderless table-hover mt-2\">\n                    <thead className=\"thead-light\">\n                        <tr>\n                            <th scope=\"col\"> &#35; </th>\n                            <th scope=\"col\">Task Name </th>\n                            <th scope=\"col\">Start Date</th>\n                            <th scope=\"col\">Deadline</th>\n                            <th scope=\"col\">Responsible</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {tasks.map((lists, index) =>\n                            <tr key={index} onClick={findId}>\n                                <th scope=\"row\">{lists.id}</th>\n                                <td>{lists.taskName}</td>\n                                <td>{lists.startDate}</td>\n                                <td>{lists.deadline}</td>\n                                <td>{lists.responsible}</td>\n                            </tr>\n                        )}\n                    </tbody>\n                </table>\n            </div>}\n            {isClicked && <TaskInfo taskInfo={taskInfo} />}\n        </div>\n    )\n}","import React from 'react';\nimport './App.css';\nimport TaskManager from './component/taskmanger';\n\nfunction App() {\n  return (\n    <div>\n      <TaskManager />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}